<?php

/**
 * @file
 * Install/update code for the Paragraphs Aplenty module.
 */

/**
 * Implements hook_install().
 */
function paragraphs_aplenty_install() {
  module_load_include('inc', 'paragraphs_aplenty', 'includes/paragraphs_aplenty.crud');

  // Install the Hero paragraph type.
  // Similar to Hero in Backdrop core, or Bootstrap 3.x.
  // @see https://getbootstrap.com/docs/3.4/components/#jumbotron
  $bundle = 'aplenty_hero';
  $settings = array(
    'name' => 'Hero',
    'label' => 'Hero',
    'description' => 'Content container with a title, body text, link, and a background image.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Hero background image',
    'description' => 'If provided, this image will appear as the background for the hero.',
    'settings' => array(
      'file_directory' => 'hero',
      'min_dimensions' => '1200x300',
      'max_dimensions' => '3600x600',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => '',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Hero callout title',
    'description' => 'If provided, this title will appear at the top of the hero callout.',
  ));
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Description',
    'required' => FALSE,
  ));
  paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Hero callout button',
    'description' => 'If provided, this link will appear at the bottom of the hero callout, as a button.',
    'settings' => array(
      'attributes' => array(
        'configurable_class' => 1,
      ),
    ),
  ));

  // Install the Text paragraph type.
  $bundle = 'aplenty_text';
  $settings = array(
    'name' => 'Text',
    'label' => 'Text',
    'description' => 'Simple rich text field.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Text',
    'required' => TRUE,
  ));

  // Install the Media Block paragraph type.
  // Similar to Media object in Bootstrap 3.x
  // @see https://getbootstrap.com/docs/3.4/components/#media
  $bundle = 'aplenty_media_block';
  $settings = array(
    'name' => 'Media block',
    'label' => 'Media block',
    'description' => 'Content container with a title, image, body text. The image can be aligned left or right.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Media block title',
    'required' => TRUE,
  ));
  paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Media block image',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Media block body',
    'required' => TRUE,
  ));

  // Install the Media List paragraph type.
  // Container of media blocks.
  $bundle = 'aplenty_media_list';
  $settings = array(
    'name' => 'Media list',
    'label' => 'Media list',
    'description' => 'Container of media blocks. Can have 1 or 2 columns and assign the image to the left or right.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_list_field('field_aplenty_media_align', $bundle,
    array(
      'label' => 'Media align',
      'description' => 'Choose whether to align the media image to the left or right for each child media item.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 'aplenty-media-left'),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          'aplenty-media-left' => 'Left',
          'aplenty-media-right' => 'Right',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_number_list_field('field_aplenty_media_width', $bundle,
    array(
      'label' => 'Column width',
      'description' => 'This sets the number of media blocks per row.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 2),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          1 => '1 block (full width)',
          2 => '2 blocks (Â½ width)',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Media blocks',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_media_block' => 'aplenty_media_block',
      ),
      'title' => 'Media block',
      'title_multiple' => 'Media blocks',
    ),
    'required' => TRUE,
  ));

  // Install the Card paragraph type.
  // Similar to card in Bootstrap 5.x
  // @see https://getbootstrap.com/docs/5.3/components/card/
  $bundle = 'aplenty_card';
  $settings = array(
    'name' => 'Card',
    'label' => 'Card',
    'description' => 'Content container with a title, image, body text and link. Can be extended with new fields.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Card title',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 2,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(
        ),
        'weight' => 2,
      ),
    ),
  ));
  paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Card image',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'card',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'card',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Card body',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 3,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'weight' => 3,
      ),
    ),
  ));
  paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Card button',
    'description' => 'If provided, this link will appear at the bottom of the card, as a button.',
    'settings' => array(
      'attributes' => array(
        'configurable_class' => 1,
      ),
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
    ),
  ));

  // Install the Cards paragraph type.
  // Container of cards.
  $bundle = 'aplenty_cards';
  $settings = array(
    'name' => 'Cards',
    'label' => 'Cards',
    'description' => 'Container for cards. There are also fields for card styles and the card width. Feel free to add styles or override existing styles in your theme\'s stylesheet.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_list_field('field_aplenty_card_style', $bundle,
    array(
      'label' => 'Card style',
      'description' => 'Choose the card style to apply to each card.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 'aplenty-card-plain'),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          'aplenty-card-plain' => 'Plain',
          'aplenty-card-border' => 'Borders',
          'aplenty-card-background' => 'Background',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_number_list_field('field_aplenty_card_width', $bundle,
    array(
      'label' => 'Cards width',
      'description' => 'This sets the width of the cards per row (the number of cards per row).',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 3),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          2 => 'Â½ width (2 cards)',
          3 => 'â width (3 cards)',
          4 => 'Â¼ width (4 cards)',
          6 => 'â width (6 cards)',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Cards',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_card' => 'aplenty_card',
      ),
      'title' => 'Card',
      'title_multiple' => 'Cards',
    ),
    'required' => TRUE,
  ));

  // Install the Column paragraph type.
  // Used in the grid.
  $bundle = 'aplenty_column';
  $settings = array(
    'name' => 'Column',
    'label' => 'Column',
    'description' => 'Rich text field displayed in the row of columns.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Text',
  ));

  // Install the Column wrapper paragraph type.
  // Used in the grid.
  $bundle = 'aplenty_column_wrapper';
  $settings = array(
    'name' => 'Column Wrapper',
    'label' => 'Column Wrapper',
    'description' => 'Displayed in the row of columns. Contains other paragraph types.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Column Content',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_heading' => 'aplenty_heading',
        'aplenty_text' => 'aplenty_text',
        'aplenty_accordion' => 'aplenty_accordion',
        'aplenty_image' => 'aplenty_image',
      ),
      'title' => 'Paragraph',
      'title_multiple' => 'Paragraphs',
    ),
    'required' => TRUE,
  ));

  // Install the Grid (aka "Row of columns") paragraph type.
  // Uses the core grid, similar to Bootstrap v3.x.
  // @see https://getbootstrap.com/docs/3.4/css/#grid
  $bundle = 'aplenty_grid';
  $settings = array(
    'name' => 'Row of columns',
    'label' => 'Row of columns',
    'description' => 'This is a container of columns displayed in a row. If there are more columns assigned to a row than allowed, the extra columns will not be displayed.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_number_list_field('field_aplenty_column_width', $bundle,
    array(
      'label' => 'Column width',
      'description' => 'This sets the width of the columns in this row, and the number of columns per row. Any extra columns assigned will not be displayed.',
      'required' => TRUE,
      'default_value' => array(
        array('value' => 3),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          2 => 'Â½ width (2 columns)',
          3 => 'â width (3 columns)',
          4 => 'Â¼ width (4 columns)',
          6 => 'â width (6 columns)',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_number_list_field('field_aplenty_column_stretch', $bundle,
    array(
      'label' => 'Column to stretch',
      'description' => 'Choose which column will stretch to fill the remainder. If the number of paragraphs is less than the set number of columns, then the column chosen here will stretch to fill the remainder.',
      'default_value' => array(
        array('value' => 1),
      ),
    ),
    array(
      'settings' => array(
        'allowed_values' => array(
          1 => 'First column',
          2 => 'Second column',
          3 => 'Third column',
          4 => 'Fourth column',
          5 => 'Fifth column',
        ),
      ),
    )
  );
  paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Columns',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_column' => 'aplenty_column',
        'aplenty_column_wrapper' => 'aplenty_column_wrapper',
      ),
      'title' => 'Column',
      'title_multiple' => 'Columns',
    ),
    'required' => TRUE,
  ));

  // Install the Accordion Item paragraph type.
  $bundle = 'aplenty_accordion_item';
  $settings = array(
    'name' => 'Accordion item',
    'label' => 'Accordion item',
    'description' => 'A single accordion with a title and body.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_field('field_aplenty_title', $bundle, array(
    'label' => 'Accordion item title',
    'required' => TRUE,
  ));
  paragraphs_aplenty_add_text_long_field('field_aplenty_body', $bundle, array(
    'label' => 'Accordion item content',
  ));

  // Install the Accordion paragraph type.
  $bundle = 'aplenty_accordion';
  $settings = array(
    'name' => 'Accordion',
    'label' => 'Accordion',
    'description' => 'Container for accordions.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_bordered', $bundle, array(
    'label' => 'Add border around items',
  ));
  paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_multi', $bundle, array(
    'label' => 'Allow more than one item to expand at a time',
  ));
  paragraphs_aplenty_add_boolean_field('field_aplenty_accordion_expand', $bundle, array(
    'label' => 'Start expanded',
  ));
  paragraphs_aplenty_add_paragraphs_field('field_aplenty_paragraphs', $bundle, array(
    'label' => 'Accordion Items',
    'settings' => array(
      'allowed_bundles' => array(
        'aplenty_accordion_item' => 'aplenty_accordion_item',
      ),
      'title' => 'Accordion item',
      'title_multiple' => 'Accordion items',
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'paragraphs_view',
        'weight' => 4,
        'settings' => array(
          'view_mode' => 'full',
        ),
        'module' => 'paragraphs',
      ),
    ),
    'required' => TRUE,
  ));

  // Install the Heading paragraph type.
  $bundle = 'aplenty_heading';
  $settings = array(
    'name' => 'Heading',
    'label' => 'Heading',
    'description' => 'A heading and anchor. Both are optional.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_text_field('field_aplenty_heading', $bundle, array(
    'label' => 'Heading',
    'required' => FALSE,
  ));
  paragraphs_aplenty_add_text_field('field_aplenty_anchor', $bundle, array(
    'label' => 'Anchor',
    'required' => FALSE,
    'description' => 'Provide a string with no spaces. If provided, the anchor can be a destination for a relative link that begins with a hash. For example, a link like <code>#bicycle</code> would link to an anchor <code>bicycle</code>.'
  ));

  // Install the Image paragraph type.
  $bundle = 'aplenty_image';
  $settings = array(
    'name' => 'Image',
    'label' => 'Image',
    'description' => 'An image field with a caption: of text and link.',
  );
  paragraphs_aplenty_create_bundle($bundle, $settings);
  paragraphs_aplenty_add_image_field('field_aplenty_image', $bundle, array(
    'label' => 'Image',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'large',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array(
          'image_style' => 'thumbnail',
          'image_link' => '',
        ),
        'module' => 'image',
        'weight' => 1,
      ),
    ),
  ));
  paragraphs_aplenty_add_text_field('field_aplenty_caption', $bundle, array(
    'label' => 'Caption',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(),
        'module' => 'text',
        'weight' => 2,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'text_default',
        'settings' => array(
        ),
        'weight' => 2,
      ),
    ),
  ));
  paragraphs_aplenty_add_link_field('field_aplenty_link', $bundle, array(
    'label' => 'Link caption',
    'description' => 'If provided, this link will appear as part of the caption.',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'hidden',
        'type' => 'link_default',
        'settings' => array(),
        'module' => 'link',
        'weight' => 4,
      ),
    ),
  ));
}

/**
 * Update the "Card button" and "Hero button" fields so classes can
 * be added.
 */
function paragraphs_aplenty_update_1001() {
  foreach (array('aplenty_card.field_aplenty_link', 'aplenty_hero.field_aplenty_link') as $instance) {
    $config = config('field.instance.paragraphs_item.' . $instance);
    if ($config->isNew()) {
      continue;
    }
    $config->set('settings.attributes.configurable_class', 1);
    $config->save();
  }
}

/**
 * Update heading fields to be longer when editing.
 */
function paragraphs_aplenty_update_1002() {
  foreach (array('aplenty_heading.field_aplenty_heading', 'aplenty_media_block.field_aplenty_title', 'aplenty_hero.field_aplenty_title', 'aplenty_card.field_aplenty_title', 'aplenty_accordion_item.field_aplenty_title') as $instance) {
    $config = config('field.instance.paragraphs_item.' . $instance);
    if ($config->isNew()) {
      continue;
    }
    if ($config->get('widget.settings.size') > 60) {
      return;
    }
    $config->set('widget.settings.size', 100);
    $config->save();
  }
}

/**
 * Clear any caches of paragraph heading field.
 */
function paragraphs_aplenty_update_1003() {
  // @see https://github.com/backdrop-contrib/paragraphs_aplenty/issues/1
  backdrop_flush_all_caches();
}

/**
 * Update help text and labels.
 */
function paragraphs_aplenty_update_1004() {
  // Accordions
  $config = config('field.instance.paragraphs_item.aplenty_accordion.field_aplenty_accordion_expand');
  if ($config->get('label') == 'Start expanded') {
    $config->set('label', 'Start first item expanded');
  }
  $config->save();

  // Cards
  $config = config('field.instance.paragraphs_item.aplenty_cards.field_aplenty_card_style');
  if ($config->get('description') == 'Choose the card style to apply to each card.') {
    $config->set('description', 'Choose the style to apply to each card. These are basic styles which can be adapted by the theme\'s stylesheet.');
  }
  $config->save();

  $config = config('field.instance.paragraphs_item.aplenty_cards.field_aplenty_card_width');
  if ($config->get('description') == 'This sets the width of the cards per row (the number of cards per row).') {
    $config->set('description', 'This sets the width of the cards per row (the number of cards per row). Extra cards will flow to the next row. On narrower screens there will be one card per row.');
  }
  $config->save();

  // Row of columns
  $config = config('field.instance.paragraphs_item.aplenty_grid.field_aplenty_column_stretch');
  if ($config->get('description') == 'Choose which column will stretch to fill the remainder. If the number of paragraphs is less than the set number of columns, then the column chosen here will stretch to fill the remainder.') {
    $config->set('description', 'Choose which column will stretch to fill the remaining space. If the number of column items added is less than the set number of columns spaces (via the Column width field), then the column chosen here will stretch to fill two or more column spaces.');
  }
  $config->save();

  $config = config('field.instance.paragraphs_item.aplenty_grid.field_aplenty_column_stretch');
  if ($config->get('description') == 'This sets the width of the columns in this row, and the number of columns per row. Any extra columns assigned will not be displayed.') {
    $config->set('description', 'This sets the width of the columns in this row (the number of columns per row). Any extra columns assigned will not be displayed.');
  }
  $config->save();

  // Media list
  $config = config('field.instance.paragraphs_item.aplenty_media_list.field_aplenty_media_width');
  if ($config->get('description') == 'This sets the number of media blocks per row.') {
    $config->set('description', 'This sets the number of media blocks per row (the width). Extra media blocks will flow to the next row. On narrower screens there will be one media block per row.');
  }
  $config->save();

}
